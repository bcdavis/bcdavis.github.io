{"version":3,"sources":["context/context.js","components/Hero/Hero.jsx","components/Title/Title.jsx","components/About/About.jsx","components/Projects/CaseStudySlideDrawer.jsx","components/Projects/Projects.jsx","components/Contact/Contact.jsx","components/Footer/Footer.jsx","components/Nav/Nav.jsx","mock/data.js","App.js","index.js"],"names":["PortfolioContext","React","createContext","PortfolioProvider","Provider","Consumer","Header","hero","useContext","title","name","subtitle","cta","useState","isDesktop","setIsDesktop","isMobile","setIsMobile","useEffect","window","innerWidth","id","className","Container","left","bottom","duration","delay","distance","to","smooth","Title","About","about","paragraphOne","resume","Row","Col","md","sm","target","rel","href","location","CaseStudySlideDrawer","currProj","handleCaseStudy","isCaseStudyOpen","checked","console","log","open","cs","caseStudy","renderSection","sectionTitle","inputList","map","para","indexOf","Image","src","fluid","problem","length","audience","personas","challStmt","team","role","constraints","process","retrospective","ButtonGroup","toggle","ToggleButton","type","value","onChange","e","Projects","projects","setIsCaseStudyOpen","csBtnText_toOpen","csBtnText_toClose","replaceButtonText","buttonElem","text","document","getElementById","childNodes","nodeValue","innerText","prevCS","prevCaseStudyBtn","prevDrawer","currCSId","currentTarget","currCaseStudyBtn","currDrawer","classList","remove","add","project","projNum","info","url","info2","repo","img","techUsed","lg","techName","Badge","variant","vertical","right","options","reverse","max","perspective","scale","speed","transition","axis","reset","easing","data-tilt","Contact","contact","btn","email","networks","footer","network","aria-label","Footer","aria-hidden","Date","getFullYear","NavBar","nav","path2","path1","path3","path4","Nav","navbar","as","Item","spy","offset","navData","heroData","aboutData","paragraphTwo","paragraphThree","projectsData","nanoid","contactData","footerData","App","setHero","setAbout","setProjects","setContact","setFooter","setNav","onClick","x","contains","handleMenuClick","data-menu","Hero","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.deb69323.chunk.js","sourcesContent":["import React from 'react';\n\nconst PortfolioContext = React.createContext();\n\nexport const PortfolioProvider = PortfolioContext.Provider;\nexport const PortfolioConsumer = PortfolioContext.Consumer;\n\nexport default PortfolioContext;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Fade from 'react-reveal/Fade';\nimport { Link } from 'react-scroll';\nimport PortfolioContext from '../../context/context';\n\nconst Header = () => {\n  const { hero } = useContext(PortfolioContext);\n  const { title, name, subtitle, cta } = hero;\n\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section id=\"hero\" className=\"jumbotron\">\n      <Container>\n        <Fade left={isDesktop} bottom={isMobile} duration={1000} delay={500} distance=\"30px\">\n          <h1 className=\"hero-title\">\n            {title || 'Hi, my name is'}{' '}\n            <span className=\"text-color-main\">{name || 'Your Name'}</span>\n            <br />\n            <span className=\"subtitle\">{subtitle || \"I'm the Unknown Developer.\"}</span>\n          </h1>\n        </Fade>\n        <Fade left={isDesktop} bottom={isMobile} duration={1000} delay={1000} distance=\"30px\">\n          <p className=\"hero-cta\">\n            <span className=\"cta-btn cta-btn--hero\">\n              <Link to=\"projects\" smooth duration={1000}>\n                {cta || 'My Work'}\n              </Link>\n            </span>\n          </p>\n        </Fade>\n      </Container>\n    </section>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Fade from 'react-reveal/Fade';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ title }) => (\n  <Fade bottom duration={1000} delay={300} distance=\"0px\">\n    <h2 className=\"section-title\">{title}</h2>\n  </Fade>\n);\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import React, { useContext, useState, useEffect } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Title from '../Title/Title';\n//import AboutImg from '../Image/AboutImg';\nimport PortfolioContext from '../../context/context';\n\nconst About = () => {\n  const { about } = useContext(PortfolioContext);\n  const { paragraphOne, resume } = about;\n\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <section id=\"about\">\n      <Container>\n        <Title className=\"about-title\" title=\"About Me\" />\n        <Row className=\"about-wrapper\">\n          {/* <Col md={6} sm={12}>\n            <Fade bottom duration={1000} delay={600} distance=\"30px\">\n              <div className=\"about-wrapper__image\">\n                <AboutImg alt=\"profile picture\" filename={img} />\n              </div>\n            </Fade>\n          </Col> */}\n          <Col className=\"info-wrapper\" md={10} sm={12}>\n            <Fade left={isDesktop} bottom={isMobile} duration={1000} delay={1000} distance=\"30px\">\n              <div className=\"about-wrapper__info\">\n                <p className=\"about-wrapper__info-text\">\n                  {paragraphOne ||\n                    'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Excepturi neque, ipsa animi maiores repellendu distinctioaperiam earum dolor voluptatum consequatur blanditiis inventore debitis fuga numquam voluptate architecto itaque molestiae.'}\n                </p>\n                {/* <p className=\"about-wrapper__info-text\">\n                  {paragraphTwo ||\n                    'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Excepturi neque, ipsa animi maiores repellendu distinctioaperiam earum dolor voluptatum consequatur blanditiis inventore debitis fuga numquam voluptate architecto itaque molestiae.'}\n                </p>\n                <p className=\"about-wrapper__info-text\">\n                  {paragraphThree || 'Lorem ipsum dolor sit, amet consectetur adipisicing elit.'}\n                </p> */}\n                {resume && (\n                  <span className=\"d-flex mt-3 md-center\">\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"cta-btn cta-btn--resume\"\n                      href={window.location.href + resume}\n                    >\n                      Resume\n                    </a>\n                  </span>\n                )}\n              </div>\n            </Fade>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default About;\n","// This file describes the case study of a project listed in the projects section\n\n// The case study slides out from underneath the project card, and is populated with\n// relevant case study data from data.js\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport { Container, Row, Col, Badge, Image, ToggleButton, ButtonGroup } from 'react-bootstrap';\n//import Image from 'react-bootstrap/Image';\n// import { Container, Col } from 'react-bootstrap';\n\n\n\nconst CaseStudySlideDrawer = ({ currProj, handleCaseStudy, isCaseStudyOpen, checked }) => {\n    const csBtnText_toOpen = \"View Case Study\";\n    const csBtnText_toClose = \"Close Case Study\";\n\n    const [isDesktop, setIsDesktop] = useState(false);\n    const [isMobile, setIsMobile] = useState(false);\n\n    useEffect(() => {\n        console.log(\"isCaseStudyOpen--useEffect(): \", isCaseStudyOpen);\n        if (isCaseStudyOpen.open === true) {\n            console.log('Case study is open: ', isCaseStudyOpen.id);\n        } else {\n            console.log('Case Study is closed:', isCaseStudyOpen.id);\n        }\n    }, []);\n\n\n    console.log(\"currProj\", currProj);\n    // pass in the currently-rendering project\n    // Grab caseStudy attribute from object:\n    const cs = currProj.caseStudy; // caseStudy is an object with the following keys:\n\n    // Problem, audience, personas, challStmt, Team, Role, Constraints, Process, Retrospective \n\n    // This function renders the paragraphs of written content associated with a case study section\n    const renderSection = (sectionTitle, inputList) => {\n        // sectionTitle is a string\n        // inputList is an array of strings\n        return (\n            <>\n                <h3 className=\"cs-title\">{sectionTitle}</h3>\n                <div className=\"cs-paragraphs\">\n                    {inputList.map((para) => {\n                        // para is a string element in the inputList array\n\n                        // Check if para is an image file name\n                        if((para.indexOf(\".jpg\") > 0) || (para.indexOf(\".png\") > 0)){\n                            // The para string could be an image with .jpg or .png extension\n                            return (\n                                <div className=\"cs-img-container\">\n                                    <Image className=\"cs-img\" src={`/images/${para}`} fluid/>\n                                </div>\n                            )\n                        }\n                        // If not a file name, treat as regular text\n                        else {\n                            return (\n                                <p className=\"cs-para-text\">{para}</p>\n                            )\n                        }\n\n                    })}\n                </div>\n                <br></br>\n                \n            </>\n        )\n    }\n\n\n\n    return (\n        <>\n            <Fade left={isDesktop} bottom={isMobile} duration={500} delay={0} distance=\"0px\">\n                <div id={`cs-drawer-${currProj.id}`} className=\"cs-drawer\">\n                    {cs.problem.length > 0 ? renderSection(\"Problem\", cs.problem) : null}\n                    {cs.audience.length > 0 ? renderSection(\"Audience\", cs.audience) : null}\n                    {cs.personas.length > 0 ? renderSection(\"Personas\", cs.personas) : null}\n                    {cs.challStmt.length > 0 ? renderSection(\"Challenge Statement\", cs.challStmt) : null}\n                    {cs.team.length > 0 ? renderSection(\"The Team\", cs.team) : null}\n                    {cs.role.length > 0 ? renderSection(\"My Role\", cs.role) : null}\n                    {cs.constraints.length > 0 ? renderSection(\"Constraints\", cs.constraints) : null}\n                    {cs.process.length > 0 ? renderSection(\"Design Process\", cs.process) : null}\n                    {cs.retrospective.length > 0 ? renderSection(\"Success\", cs.retrospective) : null}\n                    <div className=\"cs-close-btn-container\">\n                        <ButtonGroup toggle>\n                            <ToggleButton\n                                id={currProj.title}\n                                type=\"checkbox\"\n                                className=\"cta-btn cta-btn--hero case-study-btn\"\n                                value={currProj.title}\n                                checked={checked}\n                                onChange={(e) => handleCaseStudy(e)}\n                                >\n                                Close Case Study\n                            </ToggleButton>\n                        </ButtonGroup>\n                    </div>\n                </div>\n            </Fade>\n        </>\n    )\n}\n\nexport default CaseStudySlideDrawer;","import React, { useContext, useEffect, useState } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport Tilt from 'react-tilt';\n//import Image from 'react-bootstrap/Image';\nimport { Container, Row, Col, Badge, ToggleButton, Button, Image, ButtonGroup, Accordion } from 'react-bootstrap';\n//import ButtonGroup from 'react-bootstrap/ButtonGroup';\n//import Button from 'react-bootstrap/Button';\n//import ToggleButton from 'react-bootstrap/ToggleButton'\nimport PortfolioContext from '../../context/context';\nimport Title from '../Title/Title';\n//import ProjectImg from '../Image/ProjectImg';\nimport CaseStudySlideDrawer from './CaseStudySlideDrawer';\n//import { element } from 'prop-types';\n\nconst Projects = () => {\n  const { projects } = useContext(PortfolioContext); // get all projects from data.js?\n\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [isCaseStudyOpen, setIsCaseStudyOpen] = useState({\n    open: false,\n    id: null,\n  });\n  const [checked, setChecked] = useState(false);\n\n  const csBtnText_toOpen = \"View Case Study\";\n  const csBtnText_toClose = \"Close Case Study\";\n\n  //const drawers = document.querySelectorAll('.case-study-drawer');\n\n  // const [count, setCount] = useState(0);\n\n  //let outcome = '';\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n\n  // useEffect(() => {\n  //   console.log('Case Study Action: ', isCaseStudyOpen.id);\n  // }, []);\n\n  useEffect(() => {\n    if (checked) {\n      console.log('Checked: ', checked);\n    }\n    else{ \n      console.log('Checked: ', checked);\n    }\n  }, [checked]);\n\n\n  useEffect(() => {\n    console.log(\"isCaseStudyOpen--useEffect(): \", isCaseStudyOpen);\n    if (isCaseStudyOpen.open === true) {\n      console.log('Case study is open: ', isCaseStudyOpen.id);\n    } else {\n      console.log('Case Study is closed:', isCaseStudyOpen.id);\n    }\n  }, []);\n\n\n  function replaceButtonText(buttonElem, text){\n    if (document.getElementById)\n    {\n      if (buttonElem)\n      {\n        //console.log(\"Checking button ---- \");\n        //console.log(\"buttonElem.childNodes[1].nodeValue: \", buttonElem.childNodes[1].nodeValue);\n        //console.log(\"buttonElem.innerText: \", buttonElem.innerText);\n        if (buttonElem.childNodes[1])\n        {\n          //console.log(\"have childNodes\");\n          buttonElem.childNodes[1].nodeValue=text;\n          \n        }\n        else if (buttonElem.value)\n        {\n          //console.log(\"have value\");\n          buttonElem.value=text;\n        }\n        else //if (button.innerHTML)\n        {\n          //console.log(\"have innerText\");\n          buttonElem.innerText=text;\n        }\n      }\n    }\n  }\n\n\n\n\n  const handleCaseStudy = (e) => {\n\n\n    //console.log('CASE STUUUUDY!');\n    const prevCS = isCaseStudyOpen; // the id and open status of the project last interacted with\n    const prevCaseStudyBtn = document.getElementById(`${prevCS.id}`); // grabs the case study button of the current project\n    const prevDrawer = document.getElementById(`${prevCS.id}-drawer`); // grab the case study drawer of the project last interacted with\n\n    const currCSId = e.currentTarget.value; // the id of the project we just clicked\n    const currCaseStudyBtn = document.getElementById(currCSId); // grabs the case study button of the current project\n    const currDrawer = document.getElementById(`${currCSId}-drawer`); // grabs the case study drawer of the current project\n\n    // console.log(\"---- Case study information ----\");\n    // console.log(\"--------------------------------\");\n    // console.log(\"prevCS: \", prevCS);\n    // console.log(\"new currCSId: \", currCSId);\n    // console.log(\"--------------------------------\");\n    // console.log(\"prevCaseStudyBtn: \", prevCaseStudyBtn === null ? prevCaseStudyBtn : prevCaseStudyBtn.innerText);\n    // console.log(\"currCaseStudyBtn: \", currCaseStudyBtn.innerText);\n    // console.log(\"--------------------------------\");\n    // console.log(\"prevDrawer: \", prevDrawer);\n    // console.log(\"currDrawer: \", currDrawer);\n    //outcome = 'outcome';\n    // compare id of current case study (currCSId = case study id) to that which is stored in state\n    if (currCSId === prevCS.id) {\n\n      //\n      // clicked the SAME case study button of a project whose \n      // case study status was last changed (previously in state)\n      //\n\n      if (prevCS.open === true) {\n        //console.log(\"This case study was originally open\");\n        // If the 'open' status of the last case study is 'true', we want to close that case study\n        //outcome += '- selfOpen-->selfClosed -';\n        setIsCaseStudyOpen({ open: false, id: currCSId });\n        // Change case study button text\n        replaceButtonText(prevCaseStudyBtn, csBtnText_toOpen);\n        // Close the previous case study's drawer\n        prevDrawer.classList.remove('drawer-open');\n        \n      } else {\n        //console.log(\"This case study was originally closed\");\n        //outcome += '- selfClosed-->selfOpen -';\n        // If the 'open' status of the last case study is 'false', we want to open that case study\n        setIsCaseStudyOpen({ open: true, id: currCSId });\n        // Change case study button text\n        replaceButtonText(currCaseStudyBtn, csBtnText_toClose);\n        // Open the new case study drawer\n        currDrawer.classList.add('drawer-open'); \n      }\n    } else {\n\n      //\n      // Clicked the case study button of a DIFFERENT project than \n      // that which was last changed (previously in state)\n      //\n\n      if (prevCS.open === true) {\n        //console.log(\"This case study was originally open\");\n        //outcome += '- otherClosed -';\n        // Close the case study in previously changed state if it is 'open'\n        setIsCaseStudyOpen({ open: false, id: prevCS.id });\n        // Change case study button text\n        replaceButtonText(prevCaseStudyBtn, csBtnText_toOpen);\n        // Close the previous case study's drawer\n        prevDrawer.classList.remove('drawer-open');\n      }\n      // Open a new case study\n      //outcome += '- selfOpen -';\n      setIsCaseStudyOpen({ open: true, id: currCSId });\n      // Change case study button text\n      replaceButtonText(currCaseStudyBtn, csBtnText_toClose);\n      // Open the new case study's drawer\n      currDrawer.classList.add('drawer-open');\n    }\n    //console.log(outcome);\n  };\n\n  // const handleCountClick = (n) => {\n  //   const plusOne = n + 1;\n  //   setCount(plusOne);\n  // };\n\n  // const handleCheck = (e) => {\n  //   console.log('drawers: ', drawers);\n  //   console.log(e.currentTarget.value);\n  //   //  console.log(e.currentTarget.checked);\n  //   setChecked(e.currentTarget.checked);\n    \n\n  //   const drawer = document.querySelector('.case-study-drawer');\n  //   if(checked){\n  //     drawer.classList.add('drawer-open');\n  //   }\n  //   else{\n  //     drawer.classList.remove('drawer-open');\n  //   }\n  // };\n\n\n  return (\n    <section id=\"projects\">\n      <Container>\n        <div className=\"project-wrapper\">\n          <Title title=\"Projects\" />\n          {projects.map((project) => {\n            const { projNum, title, info, info2, url, repo, img, id, techUsed, caseStudy} = project;\n            // for each project, store its variables to use for rendering\n            //let techList = techUsed.split(\" \");\n            // split up techUsed string into array of tech names, separated by spaces\n\n\n            return (\n                <Row key={id}>\n                  <Col lg={4} sm={12}>\n                    <Fade\n                      left={isDesktop}\n                      bottom={isMobile}\n                      duration={500}\n                      delay={250}\n                      distance=\"30px\"\n                    >\n                      <div className=\"project-wrapper__text\">\n                        <h3 className=\"project-wrapper__text-title\">{title || 'Project Title'}</h3>\n                        <div>\n                          <p className=\"mb-4\">\n                            {info === '' ? '' : info}\n                          </p>\n                          <div className=\"tech-badges\">\n                            {techUsed.map((techName) => {\n                              return (\n                                <div className=\"badgeContainer\">\n                                  <Badge className=\"techBadge-outline\" variant=\"light\">{techName}</Badge>\n                                </div>\n                              )\n                            })}\n\n                          </div>\n                        </div>\n                        <ButtonGroup toggle vertical className=\"proj-btns\">                        \n                          <ToggleButton\n                            id={title}\n                            type=\"checkbox\"\n                            className=\"cta-btn cta-btn--hero case-study-btn\"\n                            value={title}\n                            checked={checked}\n                            onChange={(e) => handleCaseStudy(e)}\n                          >\n                            View Case Study\n                          </ToggleButton>\n                          <ButtonGroup className=\"live-src-btns\">\n                            {url === '' ? '' : \n                              <a\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"cta-btn text-color-main\"\n                                href={url || '#!'}\n                              >\n                                See Live\n                              </a>\n                            }\n\n                            {repo && (\n                              <a\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                className=\"cta-btn text-color-main\"\n                                href={repo}\n                              >\n                                Source Code\n                              </a>\n                            )}\n                          </ButtonGroup>\n                        </ButtonGroup>\n                      </div>\n                    </Fade>\n                  </Col>\n                  <Col lg={8} sm={12}>\n                    <Fade\n                      right={isDesktop}\n                      bottom={isMobile}\n                      duration={500}\n                      delay={250}\n                      distance=\"30px\"\n                    >\n                      <div className=\"project-wrapper__image\">\n\n                        \n                          <Tilt\n                            options={{\n                              reverse: false,\n                              max: 8,\n                              perspective: 1000,\n                              scale: 1,\n                              speed: 300,\n                              transition: true,\n                              axis: null,\n                              reset: true,\n                              easing: 'cubic-bezier(.03,.98,.52,.99)',\n                            }}\n                          >\n                              <div data-tilt className=\"thumbnail rounded containerHover\">\n                                <Image className=\"img\" src=\"/images/MiniClueTemp.png\" fluid/>\n                                {/* <div className=\"hoverMe\"></div> */}\n                              </div>\n                          </Tilt>\n                      </div>\n                    </Fade>\n                  </Col>\n                  <Col id={`${title}-drawer`} className=\"case-study-drawer\">                    \n                    <CaseStudySlideDrawer currProj={project} key={id} handleCaseStudy={handleCaseStudy} isCaseStudyOpen={isCaseStudyOpen} checked={checked}/>\n                  </Col>\n                </Row>\n            );\n          })}\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default Projects;\n","import React, { useContext } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport { Container } from 'react-bootstrap';\nimport { Link } from 'react-scroll';\nimport PortfolioContext from '../../context/context';\nimport Title from '../Title/Title';\n\nconst Contact = () => {\n  const { contact } = useContext(PortfolioContext);\n  const { cta, btn, email } = contact;\n\n  const { footer } = useContext(PortfolioContext);\n  const { networks } = footer;\n\n  return (\n    <section id=\"contact\">\n      <Container>\n        <Title title=\"Contact\" />\n        <Fade bottom duration={1000} delay={800} distance=\"30px\">\n          <div className=\"contact-wrapper\">\n            <p className=\"contact-wrapper__text\">\n              {cta || 'Wanna catch up?'}\n            </p>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"contact-email-btn cta-btn cta-btn--resume\"\n              href={email ? `mailto:${email}` : 'https://github.com/cobidev/react-simplefolio'}\n            >\n              {btn || \"Let's Talk\"}\n              <i className=\"contact-email-icon fa fa-envelope\"></i>\n            </a>\n          </div>\n\n        </Fade>\n        <Fade bottom duration={1000} delay={1000} distance=\"20px\">\n          <div className=\"social-links--contact\">\n            {networks &&\n              networks.map((network) => {\n                const { id, name, url } = network;\n                return (\n                  <a\n                    key={id}\n                    href={url || 'https://github.com/cobidev/gatsby-simplefolio'}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    aria-label={name}\n                  >\n                    <i className={`fa fa-${name || 'refresh'} fa-inverse light`} />\n                  </a>\n                );\n              })}\n          </div>\n        </Fade>\n      </Container>\n    </section>\n  );\n};\n\nexport default Contact;\n","import React, { useContext } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Link } from 'react-scroll';\nimport PortfolioContext from '../../context/context';\n//import GithubButtons from '../GithubButtons/GithubButtons';\n\n//import { githubButtons } from '../../mock/data';\n\nconst Footer = () => {\n  const { footer } = useContext(PortfolioContext);\n  //const { networks } = footer;\n  //const { isEnabled } = githubButtons;\n\n  return (\n    <footer className=\"footer navbar-static-bottom\">\n      <Container>\n          <span className=\"back-to-top\">\n            <Link to=\"hero\" smooth duration={1000}>\n              <i className=\"fa fa-angle-up fa-2x\" aria-hidden=\"true\" />\n            </Link>\n          </span>\n        {/* <span className=\"back-to-top\">\n          <Link to=\"hero\" smooth duration={1000}>\n            <i className=\"fa fa-angle-up fa-2x\" aria-hidden=\"true\" />\n          </Link>\n        </span>\n        <div className=\"social-links\">\n          {networks &&\n            networks.map((network) => {\n              const { id, name, url } = network;\n              return (\n                <a\n                  key={id}\n                  href={url || 'https://github.com/cobidev/gatsby-simplefolio'}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  aria-label={name}\n                >\n                  <i className={`fa fa-${name || 'refresh'} fa-inverse`} />\n                </a>\n              );\n            })}\n        </div> */}\n        <hr />\n        <p className=\"footer__text\">\n          © {new Date().getFullYear()} - {' '}\n          <a href=\"https://github.com/bcdavis\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Ben Davis\n          </a>\n        </p>\n\n        {/* {isEnabled && <GithubButtons />} */}\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useContext, useState, useEffect } from 'react';\nimport Nav from 'react-bootstrap/Nav';\n//import Fade from 'react-reveal/Fade';\nimport { Link } from 'react-scroll';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport PortfolioContext from '../../context/context';\n\n/**\n * TODO:\n * - mark nav items as active as you scroll along the page and when you click\n *   on a certain section using the nav bar.\n *\n * - Make nav bar span height of screen but keep nav items centered vertically\n */\n\n/* Set the width of the side navigation to 250px and the left margin of the page content to 250px */\n\n// if(sidenav.class === \"sidenav\"){\n//   sidenav.getElementsByClassName += \"responsive\";\n//   //sidenav.style.width = \"250px\";\n//   document.getElementById(\"right-content\").style.marginLeft = \"250px\";\n// }\n// else{\n//   sidenav.class = \"sidenav\";\n//   //sidenav.style.width = \"0\";\n//   document.getElementById(\"right-content\").style.marginLeft = \"0\";\n// }\n\nconst NavBar = () => {\n  const { nav } = useContext(PortfolioContext);\n  const { footer } = useContext(PortfolioContext);\n  const { networks } = footer;\n  const { path1, path2, path3, path4 } = nav;\n\n  const [isDesktop, setIsDesktop] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    if (window.innerWidth > 769) {\n      setIsDesktop(true);\n      setIsMobile(false);\n    } else {\n      setIsMobile(true);\n      setIsDesktop(false);\n    }\n  }, []);\n\n  return (\n    <>\n      <Nav navbar={true} className=\"sidenav menu\" id=\"vert-nav\" as=\"ul\">\n          <Nav.Item as=\"li\">\n            <div id=\"vert-nav-top\">\n              <Link className=\"to-hero\" to=\"hero\" smooth duration={700}>             \n                <h3>Ben Davis</h3>\n                <p>UI/UX Designer & Developer</p>\n              </Link>\n            </div>\n          </Nav.Item>\n          {/* <Nav.Item as=\"li\">\n            <Link\n              className=\"nav-link to-hero\"\n              to=\"hero\"\n              smooth\n              duration={700}\n              spy={true}\n              offset={-100}\n            >\n              <div>\n                <i className=\"fa fa-home nav-link__icon\" />\n              </div>\n              {path1 || 'Home1'}\n            </Link>\n          </Nav.Item> */}\n          <Nav.Item as=\"li\">\n            <Link\n              className=\"nav-link to-about\"\n              to=\"about\"\n              smooth\n              duration={700}\n              spy={true}\n              offset={0}\n            >\n              <div>\n                <i className=\"fa fa-user nav-link__icon\" />\n              </div>\n              {path2 || 'About1'}\n            </Link>\n          </Nav.Item>\n          <Nav.Item as=\"li\">\n            <Link\n              className=\"nav-link to-projects\"\n              to=\"projects\"\n              smooth\n              duration={700}\n              spy={true}\n              offset={0}\n            >\n              <div>\n                <i className=\"fa fa-file-code-o nav-link__icon\" />\n              </div>\n              {path3 || 'Projects1'}\n            </Link>\n          </Nav.Item>\n          <Nav.Item as=\"li\">\n            <Link\n              className=\"nav-link to-contact\"\n              to=\"contact\"\n              smooth\n              duration={700}\n              spy={true}\n              offset={0}\n            >\n              <div>\n                <i className=\"fa fa-paper-plane nav-link__icon\" />\n              </div>\n              {path4 || 'Contacts1'}\n            </Link>\n          </Nav.Item>\n        <ButtonGroup id=\"nav-footer\">\n          <div id=\"social-links\">\n            {networks &&\n              networks.map((network) => {\n                const { id, name, url } = network;\n                return (\n                  <a\n                    id={`${name}-icon`}\n                    key={id}\n                    href={url || 'https://github.com/cobidev/gatsby-simplefolio'}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                    aria-label={name}\n                  >\n                    <i className={`fa fa-${name || 'refresh'}`} />\n                  </a>\n                );\n              })}\n          </div>\n        </ButtonGroup>\n      </Nav>\n    </>\n  );\n};\n\nexport default NavBar;\n","import { nanoid } from 'nanoid';\n\n// HEAD DATA\nexport const headData = {\n  title: 'Ben Davis', // e.g: 'Name | Developer'\n  lang: '', // e.g: en, es, fr, jp\n  description: 'Welcome to my website', // e.g: Welcome to my website\n};\n\nexport const navData = {\n  path1: 'Home',\n  path2: 'About',\n  path3: 'Projects',\n  path4: 'Contact',\n};\n\n// HERO DATA\nexport const heroData = {\n  title: \"Hi, I'm\",\n  name: 'Ben Davis',\n  subtitle: 'Front-End UI/UX Designer & Developer',\n  cta: '',\n};\n\n// ABOUT DATA\nexport const aboutData = {\n  img: 'profile.jpg',\n  paragraphOne: 'Recent graduate from Lipscomb University with a Bachelor of Science in Electrical and Computer Engineering with a commitment to excellence, strong written language skills, creativity and artistic talent, as well as an accomplished amateur photographer.',\n  paragraphTwo: '',\n  paragraphThree: '',\n  resume: 'BenDavis_resume_V3_2020.pdf', // if no resume, the button will not show up\n};\n\n// PROJECTS DATA\nexport const projectsData = [\n  {\n    projNum: 0, // Incrememnt this number with each new project -- lets site know the order in which to render projects\n    id: nanoid(),\n    img: \"MiniClueTemp.png\",\n    title: 'Mini Clue',\n    info: 'A simplified, online, competitive, single-player version of the classic detective game Clue®.',\n    info2: '',\n    url: '', // url for live demo of project\n    repo: 'https://github.com/bcdavis/CH43-Capstone-Mini-Clue', // if no repo, the button will not show up\n    techUsed: [\"JavaScript\", \"CSS3\", \"HTML5\", \"ReactJS\", \"Figma\", \"JSON Server\"], \n    caseStudy: {\n      // Each element in the following arrays represents a new paragraph of text or an image\n      // A line break is placed after each paragraph to allow some separation between bodies of text or images\n      // If a key/value pair is not applicable to this project, leave an empty string ('' if value is just a string)\n      // or an empty array ( [] ). Any empty values will not be displayed in the case study.\n\n      // PLEASE PLACE ALL IMAGES IN THE 'images' FOLDER INSIDE 'public'\n\n      problem: [\n        \"What problems were you working through?\", \n        \"How did you define success?\"\n      ],\n      audience: [\n        \"Who were the target users for the project?\", \n        \"Why them?\", \n        \"How did you decide they were the users?\", \n        \"Any personas created?\"\n      ],\n      personas: [], // ex: ['persona1.jpg', 'persona2.jpg', ...]\n      challStmt: [\"Challenge Statement\"],\n      team: [\n        \"Who worked with you on the project?\",\n        \"What was your team structure?\"\n        ],\n      role: [\"My Role\"],\n      constraints: [\n        \"Did you have any constraints?\",\n        \"Time, access to users, undefined problem, not enough people, too large of a scope, etc.\"\n      ],\n      // for the process, each array element can be an image or text\n      // This allows people to put pictures before or after some paragraphs of text\n      // Each element is checked for any image extensions (.jpg and .png)\n      // If an element includes either extension substring, try to find the image file attatched to the extension\n      process: [\n        \"What was your design process?\", \n        \"profile.jpg\",\n        \"What deliverables were you responsible for?\", \n        \"profile.jpg\",\n        \"MiniClueTemp.png\",\n        \"Speak to messiness.\"\n      ],\n      retrospective: [\n        \"Lessons learned — did you reach success metrics?\",\n        \"Work through the right problem?\", \n        \"What would you do better if you could do it again?\"\n      ],\n    }\n  },\n];\n\n// CONTACT DATA\nexport const contactData = {\n  cta: \"I'm excited to work together with you and your team!\",\n  btn: '',\n  email: 'bcollinsdavis@gmail.com',\n};\n\n// FOOTER DATA\nexport const footerData = {\n  networks: [\n    {\n      id: nanoid(),\n      name: 'linkedin',\n      url: 'https://www.linkedin.com/in/ben-c-davis/',\n    },\n    {\n      id: nanoid(),\n      name: 'github',\n      url: 'https://github.com/bcdavis',\n    },\n  ],\n};\n\n// Github start/fork buttons\nexport const githubButtons = {\n  isEnabled: false, // set to false to disable the GitHub stars/fork buttons\n};\n","//import logo from './logo.svg';\n//import './App.css';\n\n\nimport React, { useState, useEffect } from 'react';\nimport Hero from './components/Hero/Hero';\nimport About from './components/About/About';\nimport Projects from './components/Projects/Projects';\nimport Contact from './components/Contact/Contact';\nimport Footer from './components/Footer/Footer';\nimport NavBar from './components/Nav/Nav';\n//import ToggleButton from 'react-bootstrap/ToggleButton'\n\nimport { PortfolioProvider } from './context/context';\n\nimport { heroData, navData, aboutData, projectsData, contactData, footerData } from './mock/data';\n\nfunction App () {\n  const [hero, setHero] = useState({});\n  const [about, setAbout] = useState({});\n  const [projects, setProjects] = useState([]);\n  const [contact, setContact] = useState({});\n  const [footer, setFooter] = useState({});\n  const [nav, setNav] = useState({});\n\n  // const setupObserver = () => {\n  //   let observerConfig = {\n  //     root: null,\n  //     rootMargin: '0px',\n  //     threshold: 0.5, // detect target when more than 50% of it is visible\n  //   };\n  //   function observerFn(entries, observer) {\n  //     let heroEntry = entries[0];\n  //     let aboutEntry = entries[1];\n  //     let projectsEntry = entries[2];\n  //     let contactEntry = entries[3];\n  //     if(heroEntry.isIntersecting){\n  //       console.log(\"Current Intersection: \", heroEntry.target);\n  //     }\n  //     else if(aboutEntry.isIntersecting){\n  //       console.log(\"Current Intersection: \", aboutEntry.target);\n  //     }\n  //     else if(projectsEntry.isIntersecting){\n  //       console.log(\"Current Intersection: \", projectsEntry.target);\n  //     }\n  //     else if(contactEntry.isIntersecting){\n  //       console.log(\"Current Intersection: \", contactEntry.target);\n  //     }\n  //     else{\n  //       console.log(\"No current intersecting entries...\");\n  //     }\n\n  //   }\n  //   let observer = new IntersectionObserver(observerFn, observerConfig);\n\n  //   let aboutSect= document.getElementById('about');\n  //   let projectsSect= document.getElementById('projects');\n  //   let heroSect= document.getElementById('hero');\n  //   let contactSect= document.getElementById('contact');\n\n  //   observer.observe(heroSect);\n  //   observer.observe(aboutSect);\n  //   observer.observe(projectsSect);\n  //   observer.observe(contactSect);\n  // };\n\n  useEffect(() => {\n    setHero({ ...heroData });\n    setAbout({ ...aboutData });\n    setProjects([...projectsData]);\n    setContact({ ...contactData });\n    setFooter({ ...footerData });\n    setNav({ ...navData });\n    //setupObserver();\n  }, []);\n\n  // function toggleNav() {\n  //   let sidenav = document.getElementById(\"vert-nav\");\n  //   sidenav.classList.toggle(\"responsive\");\n  //   if(sidenav.classList.contains(\"responsive\")){\n  //     //document.getElementById(\"right-content\").style.marginLeft = \"250px\";\n  //     document.getElementById(\"right-content\").classList.add(\"responsive\");\n  //   }\n  //   else{\n  //     //document.getElementById(\"right-content\").style.marginLeft = \"0\";\n  //     document.getElementById(\"right-content\").classList.remove(\"responsive\");\n  //   }\n  // }\n\n  const handleMenuClick = (e) => {\n    //  console.log(e.currentTarget.checked);\n    e.currentTarget.classList.toggle('open');\n    //console.log(e.currentTarget);\n    // console.log('checked...?');\n    const x = document.getElementById('vert-nav');\n    //console.log(x);\n\n    if (e.currentTarget.classList.contains('open')){\n      x.classList.add('sidenav-open');\n    }\n    else{\n      x.classList.remove('sidenav-open');\n    }\n  };\n\n  return (\n    <>\n      <main className=\"flex-row main-page-container\">\n        <PortfolioProvider value={{ hero, nav, about, projects, contact, footer }}>\n          {/* <input id=\"hamburger\" type=\"checkbox\" className=\"hamburger-checkbox\" />\n          <label for=\"hamburger\" className=\"hamburger-label\" role=\"button\" aria-labelledby=\"menu\">\n            &#xf0c9;\n          </label> */}\n          <button\n            className=\"mobile-menu-base-tab\"\n            type=\"button\"\n            onClick={(e) => handleMenuClick(e)}\n          >\n            <div className=\"menu btn2\" data-menu=\"1\">\n              <div className=\"icon\"></div>\n            </div>\n          </button>\n          <NavBar />\n          <div className=\"right-content\">\n            {/* <div id=\"main2\">\n              <ToggleButton id=\"span\" onChange={document.getElementById(\"vert-nav\").classList.toggle('responsive')}>\n                &#9776; open\n              </ToggleButton>\n            </div> */}\n            <Hero />\n            <About />\n            <Projects />\n            <Contact />\n            <Footer />\n          </div>\n        </PortfolioProvider>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n\n\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/main.scss';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}